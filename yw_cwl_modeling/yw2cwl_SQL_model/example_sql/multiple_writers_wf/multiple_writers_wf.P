
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'multiple_writers_wf', 'multiple_writers_wf', 1, 24).
program(2, 'writer1', 'multiple_writers_wf.writer1', 5, 10).
program(3, 'writer2', 'multiple_writers_wf.writer2', 11, 16).
program(4, 'writer3', 'multiple_writers_wf.writer3', 17, 22).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'wf_input1', 'multiple_writers_wf<-wf_input1', 2, 1).
port(2, 'in', 'wf_input2', 'multiple_writers_wf<-wf_input2', 3, 2).
port(3, 'in', 'wf_input3', 'multiple_writers_wf<-wf_input3', 4, 3).
port(10, 'out', 'wf_output', 'multiple_writers_wf->wf_output', 23, 8).
port(4, 'in', 'inp1', 'multiple_writers_wf.writer1<-inp1', 6, 4).
port(5, 'out', 'out1', 'multiple_writers_wf.writer1->out1', 8, 5).
port(6, 'in', 'inp2', 'multiple_writers_wf.writer2<-inp2', 12, 6).
port(7, 'out', 'out2', 'multiple_writers_wf.writer2->out2', 14, 5).
port(8, 'in', 'inp3', 'multiple_writers_wf.writer3<-inp3', 18, 7).
port(9, 'out', 'out3', 'multiple_writers_wf.writer3->out3', 20, 5).

% FACT: port_alias(port_id, alias).
port_alias(4, 'wf_input1').
port_alias(5, 'wf_output').
port_alias(6, 'wf_input2').
port_alias(7, 'wf_output').
port_alias(8, 'wf_input3').
port_alias(9, 'wf_output').

% FACT: port_uri_template(port_id, uri).

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(1, 2).
has_in_port(1, 3).
has_in_port(2, 4).
has_in_port(3, 6).
has_in_port(4, 8).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 10).
has_out_port(2, 5).
has_out_port(3, 7).
has_out_port(4, 9).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'wf_input1', '[wf_input1]').
data(2, 'wf_input2', '[wf_input2]').
data(3, 'wf_input3', '[wf_input3]').
data(8, 'wf_output', '[wf_output]').
data(4, 'wf_input1', 'multiple_writers_wf[wf_input1]').
data(5, 'wf_output', 'multiple_writers_wf[wf_output]').
data(6, 'wf_input2', 'multiple_writers_wf[wf_input2]').
data(7, 'wf_input3', 'multiple_writers_wf[wf_input3]').

% FACT: channel(channel_id, data_id).
channel(1, 4).
channel(2, 6).
channel(3, 7).
channel(4, 8).
channel(5, 1).
channel(6, 2).
channel(7, 3).
channel(8, 5).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(4, 1).
port_connects_to_channel(6, 2).
port_connects_to_channel(8, 3).
port_connects_to_channel(9, 4).
port_connects_to_channel(4, 5).
port_connects_to_channel(6, 6).
port_connects_to_channel(8, 7).
port_connects_to_channel(9, 8).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 1).
inflow_connects_to_channel(2, 2).
inflow_connects_to_channel(3, 3).
inflow_connects_to_channel(1, 5).
inflow_connects_to_channel(2, 6).
inflow_connects_to_channel(3, 7).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(10, 4).
outflow_connects_to_channel(10, 8).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).

% FACT: extract_source(source_id, source_path).
extract_source(1, '').

% FACT: annotation(annotation_id, source_id, line_number, tag, keyword, value).
annotation(1, 1, 1, 'begin', '@begin', 'multiple_writers_wf').
annotation(2, 1, 2, 'in', '@in', 'wf_input1').
annotation(3, 1, 3, 'in', '@in', 'wf_input2').
annotation(4, 1, 4, 'in', '@in', 'wf_input3').
annotation(5, 1, 6, 'begin', '@begin', 'writer1').
annotation(6, 1, 7, 'in', '@in', 'inp1').
annotation(7, 1, 7, 'as', '@as', 'wf_input1').
annotation(8, 1, 8, 'out', '@out', 'out1').
annotation(9, 1, 8, 'as', '@as', 'wf_output').
annotation(10, 1, 9, 'end', '@end', 'writer1').
annotation(11, 1, 12, 'begin', '@begin', 'writer2').
annotation(12, 1, 13, 'in', '@in', 'inp2').
annotation(13, 1, 13, 'as', '@as', 'wf_input2').
annotation(14, 1, 14, 'out', '@out', 'out2').
annotation(15, 1, 14, 'as', '@as', 'wf_output').
annotation(16, 1, 15, 'end', '@end', 'writer2').
annotation(17, 1, 17, 'begin', '@begin', 'writer3').
annotation(18, 1, 18, 'in', '@in', 'inp3').
annotation(19, 1, 18, 'as', '@as', 'wf_input3').
annotation(20, 1, 19, 'out', '@out', 'out3').
annotation(21, 1, 19, 'as', '@as', 'wf_output').
annotation(22, 1, 20, 'end', '@end', 'writer3').
annotation(23, 1, 22, 'out', '@out', 'wf_output').
annotation(24, 1, 23, 'end', '@end', 'multiple_writers_wf').

% FACT: annotation_qualifies(qualifying_annotation_id, primary_annotation_id).
annotation_qualifies(7, 6).
annotation_qualifies(9, 8).
annotation_qualifies(13, 12).
annotation_qualifies(15, 14).
annotation_qualifies(19, 18).
annotation_qualifies(21, 20).
